[{"key": "market", "label": "Market", "color": {"red": 170, "green": 0, "blue": 255}, "icon": "fas fa-chart-line", "nodes": [{"key": "market", "label": "Equities", "type": "MARKET_NODE", "tooltip": "", "parameters": [], "inputs": [], "outputs": [{"label": "Open", "key": "open"}, {"label": "High", "key": "high"}, {"label": "Low", "key": "low"}, {"label": "Close", "key": "close"}, {"label": "Volume", "key": "volume"}], "docs": "# Equities\n\nProvides open, high, low, close and volume data stream for the given symbols. This is the basis for all indicators to stem from."}]}, {"key": "fundamental", "label": "Fundamental", "color": {"red": 249, "green": 168, "blue": 37}, "icon": "fas fa-square-root-alt", "nodes": [{"key": "node_comparator", "label": "Node Comparator", "type": "INDICATOR_NODE", "tooltip": "Compares two nodes with the specified comparator.", "parameters": [{"key": "logic", "label": "Logic", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Greater Than": 0, "Greater Equal": 1, "Less Than": 2, "Less Equal": 3, "Equal": 4, "Not Equal": 5}}}], "inputs": [{"key": "input0", "label": "Input 1", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}, {"key": "input1", "label": "Input 2", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Node Comparator\n\nAllows comparisons to be performed between ticks of two nodes. The output is a binary 1 (_true_) or 0 (_false_). Supported comparisons are:\n\n* Greater Than\n* Greater Than or Equal\n* Less Than\n* Less Than or Equal\n* Equal\n* Not Equal\n\n\n### Formula\n\n$A = \\alpha \\ @ \\ \\beta$\n\n$\\alpha$ = Input 1\n\n$\\beta$ = Input 2\n\n$@$ = Comparator"}, {"key": "constant_comparator", "label": "Constant Comparator", "type": "INDICATOR_NODE", "tooltip": "Compares a node with a constant value using the specified comparator.", "parameters": [{"key": "logic", "label": "Logic", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Greater Than": 0, "Greater Equal": 1, "Less Than": 2, "Less Equal": 3, "Equal": 4, "Not Equal": 5}}}, {"key": "value", "label": "Value", "ui": {"type": "UI_FLOAT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Constant Comparator\n\nAllows comparisons to be performed between ticks of a node and a constant value. The output is a binary 1 (_true_) or 0 (_false_). Supported comparisons are:\n\n* Greater Than\n* Greater Than or Equal\n* Less Than\n* Less Than or Equal\n* Equal\n* Not Equal\n\n\n### Formula\n\n$A = \\alpha \\ @ \\ V$\n\n$\\alpha$ = Input 1\n\n$V$ = Constant Value\n\n$@$ = Comparator"}, {"key": "node_arithmetic", "label": "Node Arithmetic", "type": "INDICATOR_NODE", "tooltip": "Arithmetic operations (+ - * /) between two nodes.", "parameters": [{"key": "logic", "label": "Logic", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Addition": 0, "Subtraction": 1, "Multiplication": 2, "Division": 3, "Exponential": 4}}}], "inputs": [{"key": "input0", "label": "Input 1", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}, {"key": "input1", "label": "Input 2", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Node Arithmetic\n\nEnables arithmetic to be performed between ticks of two nodes. Supported operations are:\n\n* Addition\n* Subtraction\n* Multiplication\n* Division\n\n\n### Formula\n\n$A = \\alpha \\ @ \\ \\beta$\n\n$\\alpha$ = Input 1\n\n$\\beta$ = Input 2\n\n$@$ = Operation performed"}, {"key": "constant_arithmetic", "label": "Constant Arithmetic", "type": "INDICATOR_NODE", "tooltip": "Arithmetic operations (+ - * /) between a node and a constant value.", "parameters": [{"key": "logic", "label": "Logic", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Addition": 0, "Subtraction": 1, "Multiplication": 2, "Division": 3, "Exponential": 4}}}, {"key": "value", "label": "Value", "ui": {"type": "UI_FLOAT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Constant Arithmetic\n\nAllows arithmetic to be performed between ticks of a node and a constant value. Supported operations are:\n\n* Addition\n* Subtraction\n* Multiplication\n* Division\n\n\n### Formula\n\n$A = \\alpha \\ @ \\ V$\n\n$\\alpha$ = Input 1\n\n$V$ = Constant Value\n\n$@$ = Operation performed"}, {"key": "logic", "label": "Logic", "type": "INDICATOR_NODE", "tooltip": "", "docs_path": "", "parameters": [{"key": "logic", "label": "Logic", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"And": 0, "Or": 1}}}], "inputs": [{"key": "inputs", "label": "Inputs", "multi": true, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}]}, {"key": "all_n", "label": "All Previous", "type": "INDICATOR_NODE", "tooltip": "Has a value of True (stored as 1.0 in the lines) if all of the values in the period evaluates to non-zero.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# All Previous\n\nHas a value of True (stored as 1.0 in the lines) if any of the values in the period evaluates to non-zero.\n\n__Example__\n\n| Tick  | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 |\n|-------|---|---|---|---|---|---|---|---|---|---|----|----|----|\n| Price | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1  | 1  | 0  |\n| HV(5) | x | x | x | x | 0 | 0 | 0 | 1 | 1 | 0 | 0  | 0  | 0  |"}, {"key": "any_n", "label": "Any Previous", "type": "INDICATOR_NODE", "tooltip": "Has a value of True (stored as 1.0 in the lines) if any of the values in the period evaluates to non-zero.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Any Previous\n\nHas a value of True (stored as 1.0 in the lines) if any of the values in the period evaluates to non-zero.\n\n__Example__\n\n| Tick  | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 |\n|-------|---|---|---|---|---|---|---|---|---|---|----|----|----|----|----|\n| Price | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0  | 0  | 0  | 0  | 0  |\n| HV(5) | x | x | x | x | 1 | 1 | 0 | 0 | 1 | 1 | 1  | 1  | 1  | 0  | 0  |"}, {"key": "bollinger_bands", "label": "Bollinger Bands", "type": "INDICATOR_NODE", "tooltip": "", "docs_path": "", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}, {"key": "devfactor", "label": "Dev Factor", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Top", "key": "top"}, {"label": "Middle", "key": "mid"}, {"label": "Bottom", "key": "bot"}]}]}, {"key": "average", "label": "Average", "color": {"red": 197, "green": 17, "blue": 98}, "icon": "fas fa-snowplow", "nodes": [{"key": "simple_moving_average", "label": "Simple Moving Average", "type": "INDICATOR_NODE", "tooltip": "Non-weighted average of the last n periods.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Simple Moving Average\n\nA Simple Moving Average (SMA) calculates the average of all ticks between the current price and the lookback period. The longer the period is, the stronger the trend direction is. However, the longer the period, the more the indicator lags behind the current market price.\n\n### Formula\n\n$SMA= \\frac{\\alpha_0 + \\alpha_1 + \\alpha_2 + ... + \\alpha_n}{n}$\n\n__Where:__\n\n$\\ n$ = Lookback Period\n\n$\\alpha_n$ = Price at the n^th^ tick from current"}, {"key": "exponential_moving_average", "label": "Exponential Moving Average", "type": "INDICATOR_NODE", "tooltip": "A Moving Average that smoothes data exponentially over time.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Exponential Moving Average\n\nAn Exponential Moving Average (EMA), similar to the Simple Moving Average (SMA) calculates the average of all ticks between the current price and the lookback period. However unlike the SMA, the EMA places an __exponentially__ larger weight on the most recent ticks.\n\n### Formula\n\n$EMA= \\beta * (Current - EMA_{prev}) + EMA_{prev}$\n\n__Where:__\n\n$EMA_{prev}$ = Previous tick EMA\n\n$Current$ = Current Price\n\n$\\beta$ = Smoothing constant"}, {"key": "weighted_moving_average", "label": "Weighted Moving Average", "type": "INDICATOR_NODE", "tooltip": "A Moving Average which gives an arithmetic weighting to values with the newest having the more weight.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Weighted Moving Average\n\nA Weighted Moving Average (WMA), similar to the Simple Moving Average (SMA) calculates the average of all ticks between the current price and the lookback period. However unlike the SMA, the WMA places a __linearly__ larger weight on the most recent ticks.\n\n### Formula\n\n$WMA= \\frac{\\alpha_o * (n) + \\alpha_1 * (n-1) + \\alpha_2 * (n-2) + ... \\alpha_n * (1)}{n + (n-1) + (n-2) + (n-3) + ...1}$\n\n__Where:__\n\n$alpha_n$ = Price n ticks ago\n\n$n$ = Lookback period\n\n__Example:__\n\nIf $n$ = 4:\n\n$WMA= \\frac{\\alpha_o * (4) + \\alpha_1 * (3) + \\alpha_2 * (2) + \\alpha_n * (1)}{5 + 4 + 3 + 2 + 1}$"}, {"key": "true_range", "label": "True Range", "type": "INDICATOR_NODE", "tooltip": "Gauges the volatility of the market during each tick.", "parameters": [], "inputs": [], "outputs": [{"label": "Output", "key": null}], "docs": "# True Range\n\nA true range (TR) measures market volitility of each tick using the high, low, and yesterday's close. This indicator is often used as a predecessor for a simple moving average.\n\n* Large TR = higher volitility\n\n* Lowver TR = lower volitility\n\n### Formula\n\n$TR = Max[Abs(H - C_p), Abs(L - C_p), (H - L)]$\n\n$H$ = High\n\n$L$ = Low\n\n$C_p$ = Previous Close"}]}, {"key": "standard_order", "label": "Orders", "color": {"red": 2, "green": 78, "blue": 101}, "icon": "fas fa-balance-scale-left", "nodes": [{"key": "market_order", "label": "Market Order", "type": "ORDER_NODE", "tooltip": "Executes order at the opening of the next tick.", "parameters": [{"key": "side", "label": "Side", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Buy": "BUY", "Sell": "SELL"}}}, {"key": "size", "label": "Size", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [], "docs": "# Market Order\n\nA order executed to take the best price currently available.\n\n* Buys at the ask price\n* Sells at the bid price"}, {"key": "stop_order", "label": "Stop Order", "type": "ORDER_NODE", "tooltip": "Triggers a market order when the price crosses specified value.", "parameters": [{"key": "side", "label": "Side", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Buy": "BUY", "Sell": "SELL"}}}, {"key": "size", "label": "Size", "ui": {"type": "UI_INT", "default": null, "constraints": null}}, {"key": "price", "label": "Stop Price", "ui": {"type": "UI_FLOAT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [], "docs": "# Stop Order\n\nAn order which triggers a market order when the price crosses specified value.\n\n* Stop orders can be used to mitigate risk via setting a stop loss"}, {"key": "limit_order", "label": "Limit Order", "type": "ORDER_NODE", "tooltip": "Executes a market order when the input crosses the specified price.", "parameters": [{"key": "side", "label": "Side", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Buy": "BUY", "Sell": "SELL"}}}, {"key": "size", "label": "Size", "ui": {"type": "UI_INT", "default": null, "constraints": null}}, {"key": "price", "label": "Limit Price", "ui": {"type": "UI_FLOAT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [], "docs": "# Limit Order\n\nA order which only fills if the price is equal or better than the limit price.\n\n* Useful for low volume or highly volatile stocks"}, {"key": "stop_limit_order", "label": "Stop Limit Order", "type": "ORDER_NODE", "tooltip": "Executes a limit order when the input crosses the specified price.", "parameters": [{"key": "side", "label": "Side", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Buy": "BUY", "Sell": "SELL"}}}, {"key": "size", "label": "Size", "ui": {"type": "UI_INT", "default": null, "constraints": null}}, {"key": "price", "label": "Stop Price", "ui": {"type": "UI_FLOAT", "default": null, "constraints": null}}, {"key": "plimit", "label": "Limit Price", "ui": {"type": "UI_FLOAT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [], "docs": "# Stop Limit Order\n\nAn order which triggers a _limit_ order when the price crosses specified value.\n"}, {"key": "stop_trail", "label": "Stop Trail Order", "type": "ORDER_NODE", "tooltip": "Follows trend and triggers a market order when the trend is reversed by a specified amount.", "parameters": [{"key": "side", "label": "Side", "ui": {"type": "UI_SELECTOR", "default": null, "options": {"Buy": "BUY", "Sell": "SELL"}}}, {"key": "size", "label": "Size", "ui": {"type": "UI_INT", "default": null, "constraints": null}}, {"key": "price", "label": "Trigger Price", "ui": {"type": "UI_FLOAT", "default": null, "constraints": null}}, {"key": "trail_percent", "label": "Trail Percent", "ui": {"type": "UI_FLOAT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [], "docs": "# Stop Trail Order\n\nAn order which follows the trend (direction depends on parameters), and triggers a market order when the trend reverses by a specified amount.\n\n* This type of order is used to guarentee profits\n* Trailing stop loses placed too close to the trend can exit early losing potential gains\n"}]}, {"key": "momentum", "label": "Momentum", "color": {"red": 0, "green": 200, "blue": 255}, "icon": "fas fa-hippo", "nodes": [{"key": "commodity_channel_index", "label": "Commodity Channel Index", "type": "INDICATOR_NODE", "tooltip": "Measures variations of the \u201ctypical price\u201d from its mean to identify extremes and reversals.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [], "outputs": [{"label": "Output", "key": null}], "docs": "# Commodity Channel Index\n\nThe commodity channel index (CCI) compares the current price to the average price of a given period. It is used to identify cyclical turns of equities and beginnings of new trends.\n\n\n### Formula\n\n$CCI = \\frac{TP - SMA}{0.015 * MD}$\n\n$TP$ = Typical Price\n\n$SMA$ = Simple Moving Average - 20 period\n\n$MD$ = Mean Deviation"}, {"key": "rate_of_change", "label": "Rate of Change", "type": "INDICATOR_NODE", "tooltip": "Measures the ratio of change in prices over a period.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "parent", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Rate of Change\n\nThe Rate of Change (ROC) indicates how quickly the input changes over the given period. This helps identify momentum and trends in the market. \n\n\n### Formula\n\n$ROC = (\\frac{V_0}{V_p} - 1)$\n\n__Where:__\n\n$V_0$ = Current Value\n\n$V_p$ = Value at lookback period"}, {"key": "rsi", "label": "RSI", "type": "INDICATOR_NODE", "tooltip": "Measures momentum by calculating the ration of higher closes and lower closes after having been smoothed by an average, normalizing the result between 0 and 100.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# RSI\n\nMeasures momentum by calculating the ration of higher closes and lower closes after having been smoothed by an average, normalizing the result between 0 and 100.\n\n### Formula\n\n$RSI = 100 - 100 / (1 + \\frac{ma_{up}}{ma_{do}})$\n\n__Where:__\n\n$U$ = up_day(input)\n$D$ = down_day(input)\n\n$ma_{up}$ = moving_average($U$)\n$ma_{do}$ = moving_average($D$)"}]}, {"key": "extrema", "label": "Extrema", "color": {"red": 77, "green": 182, "blue": 172}, "icon": "fas fa-sort", "nodes": [{"key": "lowest_value", "label": "Lowest Value", "type": "INDICATOR_NODE", "tooltip": "The lowest value for the data in a given period.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Lowest Value\n\nThe lowest value for the data in a given period.\n\n__Example__\n\n| Tick  | 0  | 1  | 2 | 3 | 4 | 5 | 6  | 7  | 8  | 9 | 10 | 11 | 12 |\n|-------|----|----|---|---|---|---|----|----|----|---|----|----|----|\n| Price | 10 | 12 | 8 | 9 | 5 | 7 | 13 | 10 | 11 | 9 | 12 | 13 | 4  |\n| LV(4) | x  | x  | x | 8 | 5 | 5 | 5  | 5  | 7  | 9 | 9  | 9  | 4  |"}, {"key": "highest_value", "label": "Highest Value", "type": "INDICATOR_NODE", "tooltip": "The highest value for the data in a given period.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Highest Index\n\nReturns the index of the first data that is the highest in the period.\n\n__Example__\n\n| Tick  | 0  | 1  | 2 | 3 | 4 | 5 | 6  | 7  | 8  | 9 | 10 | 11 | 12 |\n|-------|----|----|---|---|---|---|----|----|----|---|----|----|----|\n| Price | 10 | 12 | 8 | 9 | 5 | 7 | 13 | 10 | 11 | 9 | 12 | 13 | 4  |\n| HI(4) | x  | x  | x | 2 | 3 | 3 | 0  | 1  | 2  | 3 | 0  | 0  | 1  |"}, {"key": "lowest_index", "label": "Lowest Index", "type": "INDICATOR_NODE", "tooltip": "Returns the index of the first data that is the lowest in the period.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Lowest Index\n\nReturns the index of the first data that is the lowest in the period.\n\n__Example__\n\n| Tick  | 0  | 1  | 2 | 3 | 4 | 5 | 6  | 7  | 8  | 9 | 10 | 11 | 12 |\n|-------|----|----|---|---|---|---|----|----|----|---|----|----|----|\n| Price | 10 | 12 | 8 | 9 | 5 | 7 | 13 | 10 | 11 | 9 | 12 | 13 | 4  |\n| LI(4) | x  | x  | x | 1 | 0 | 1 | 2  | 3  | 3  | 0 | 1  | 2  | 0  |"}, {"key": "highest_index", "label": "Highest Index", "type": "INDICATOR_NODE", "tooltip": "Returns the index of the first data that is the highest in the period.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Highest Index\n\nReturns the index of the first data that is the highest in the period.\n\n__Example__\n\n| Tick  | 0  | 1  | 2 | 3 | 4 | 5 | 6  | 7  | 8  | 9 | 10 | 11 | 12 |\n|-------|----|----|---|---|---|---|----|----|----|---|----|----|----|\n| Price | 10 | 12 | 8 | 9 | 5 | 7 | 13 | 10 | 11 | 9 | 12 | 13 | 4  |\n| HI(4) | x  | x  | x | 2 | 3 | 3 | 0  | 1  | 2  | 3 | 0  | 0  | 1  |"}]}, {"key": "statistics", "label": "Statistics", "color": {"red": 135, "green": 168, "blue": 50}, "icon": "fas fa-chart-bar", "nodes": [{"key": "mean_deviation", "label": "Mean Deviation", "type": "INDICATOR_NODE", "tooltip": "The average absolute difference each value is from the period's mean.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Mean Deviation\n\nThe mean deviation (MD) measures the average absolute difference each value is from the period's mean.\n\n* Large MD = higher volitility\n\n* Lower MD = lower volitility\n\n\n### Formula\n\n$MD = \\frac{\\sum_{i=1}^{N} abs(x_i - \\mu)}{N}$\n\n__Where:__\n\n$N$ = Lookback Period\n\n$x_i$ = Value at tick $i$\n\n$\\mu$ = mean of period"}, {"key": "standard_deviation", "label": "Standard Deviation", "type": "INDICATOR_NODE", "tooltip": "Measures the spread of the stock prices.", "parameters": [{"key": "period", "label": "Period", "ui": {"type": "UI_INT", "default": null, "constraints": null}}], "inputs": [{"key": "inp", "label": "Input", "multi": false, "constraints": ["MARKET_NODE", "INDICATOR_NODE"]}], "outputs": [{"label": "Output", "key": null}], "docs": "# Standard Deviation\n\nThe standard deviation (SD) measures the spread of the dataset. This indicator is used to measure the volitility of the input and can give incite to risk.\n\n* Large SD = higher volitility\n\n* Lower SD = lower volitility\n\n\n### Formula\n\n$SD = \\sqrt{\\frac{\\sum_{i=1}^{N} (x_i - \\mu)^2}{N}}$\n\n__Where:__\n\n$N$ = Lookback Period\n\n$\\mu$ = mean of period\n\n"}]}]